[{"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\index.tsx":"1","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\reportWebVitals.ts":"2","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\Login\\login.tsx":"3","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\AppBanner\\banner.tsx":"4","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\MainMenu\\MainMenu.tsx":"5","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\Login\\Login.tsx":"6","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\StudentRegistration\\StudentRegistration.tsx":"7","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\NewTest\\NewTest.tsx":"8","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\TestList\\TestList.tsx":"9"},{"size":1984,"mtime":1615143075501,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":2037,"mtime":1607602049062,"results":"13","hashOfConfig":"11"},{"size":383,"mtime":1615138810760,"results":"14","hashOfConfig":"11"},{"size":1723,"mtime":1615138812077,"results":"15","hashOfConfig":"11"},{"size":1112,"mtime":1614802903586,"results":"16","hashOfConfig":"11"},{"size":1134,"mtime":1614973992091,"results":"17","hashOfConfig":"11"},{"size":784,"mtime":1614804155141,"results":"18","hashOfConfig":"11"},{"size":2637,"mtime":1615142185209,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"iitwkd",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\index.tsx",[],["42","43"],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\reportWebVitals.ts",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\Login\\login.tsx",[],["44","45"],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\AppBanner\\banner.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\MainMenu\\MainMenu.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\Login\\Login.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\StudentRegistration\\StudentRegistration.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\NewTest\\NewTest.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\TestList\\TestList.tsx",["46"],"import React from 'react';\r\nimport './TestList.css';\r\nimport { Button, ButtonGroup, Col, Container, ListGroup, Row } from 'react-bootstrap';\r\nimport TestType from '../../types/TestType';\r\nimport QuestionType from '../../types/QuestionType';\r\n\r\n\r\ninterface PageProperties {\r\n  match: {\r\n    params: {\r\n      pId: number;\r\n    }\r\n  }\r\n}\r\ninterface TestPageState {\r\n  tests?: TestType[]\r\n}\r\n\r\n\r\nexport class TestList extends React.Component<PageProperties> {\r\n\r\n  state: TestPageState\r\n\r\n  constructor(props: Readonly<PageProperties>) {\r\n    super(props)\r\n    this.state = {\r\n\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"borderLR px-0\">\r\n        {this.state.tests?.map(this.addTest)}\r\n        {console.log(\"render\")}\r\n      </Container>\r\n\r\n    );\r\n\r\n  }\r\n\r\n  private addTest(test: TestType) {\r\n    return (\r\n      <ListGroup key={test.testId}>\r\n\r\n        <ListGroup.Item className=\"p-1 pl-2\">\r\n          <Row noGutters>\r\n            <p className=\"testName\">{test.name}</p>\r\n          </Row>\r\n          <Row noGutters>\r\n            <Col xs=\"auto\">\r\n              <p className=\"testInfo\">Broj pitanja: {test.numOfQuestions}</p>\r\n              <p className=\"testInfo\">Vreme trajanja: {test.duration} </p>\r\n            </Col>\r\n            <Col>\r\n              <ButtonGroup className=\"float-right\">\r\n                <Button href=\"#\" className=\" p-1 mr-1 mt-2\">Promeni</Button>\r\n                <Button href=\"#\" className=\" p-1 mt-2\">Pitanja</Button>\r\n              </ButtonGroup>\r\n            </Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n      </ListGroup>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPageData(); \r\n    console.log(\"mounting\",this.props.match.params.pId)\r\n    console.log(this.props.match.params.pId)\r\n\r\n  }\r\n  UNSAFE_componentWillReceiveProps(nextProp: PageProperties) {\r\n    if (nextProp.match.params.pId !== this.props.match.params.pId) {\r\n      console.log(\"willUpdate\")\r\n      this.getPageData();\r\n    } else {\r\n      \r\n      return\r\n    }\r\n  }\r\n\r\n  /* componentDidUpdate(prevProps: PageProperties, prevState: TestType[]) {\r\n    if (this.props.match.params.pId !== prevProps.match.params.pId) {\r\n      console.log(\"Props updated\")\r\n      this.getPageData()\r\n      console.log(\"stateUpdate\")\r\n    } */\r\n\r\n\r\n  private getPageData() {\r\n    const data: TestType = {\r\n      testId: 1,\r\n      name: \"Test 1\",\r\n      numOfQuestions: 60,\r\n      duration: 30\r\n    }\r\n    const data1: TestType = {\r\n      testId: 1,\r\n      name: \"Test 2\",\r\n      numOfQuestions: 100,\r\n      duration: 75\r\n    }\r\n    this.setState({\r\n      tests: [data, data1],\r\n\r\n    })\r\n  }\r\n\r\n}\r\nexport default TestList;",["47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"49","replacedBy":"53"},{"ruleId":"51","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":5,"column":8,"nodeType":"57","messageId":"58","endLine":5,"endColumn":20},{"ruleId":"49","replacedBy":"59"},{"ruleId":"51","replacedBy":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],["61"],["62"],"@typescript-eslint/no-unused-vars","'QuestionType' is defined but never used.","Identifier","unusedVar",["61"],["62"],"no-global-assign","no-unsafe-negation"]