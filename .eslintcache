[{"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\index.tsx":"1","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\reportWebVitals.ts":"2","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\Login\\login.tsx":"3","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\AppBanner\\banner.tsx":"4","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\MainMenu\\MainMenu.tsx":"5","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\Login\\Login.tsx":"6","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\StudentRegistration\\StudentRegistration.tsx":"7","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\NewTest\\NewTest.tsx":"8","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\TestList\\TestList.tsx":"9","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\api\\api.ts":"10","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\config\\api.config.ts":"11","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\EditTest\\EditTest.tsx":"12","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\QuestionList\\QuestionList.tsx":"13","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\EditQuestion\\EditQuestion.tsx":"14","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\EditAnswer\\EditAnswer.tsx":"15","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\SpecificMainMenu\\SpecificMainMenu.tsx":"16","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\FinishedTests\\FinishedTests.tsx":"17","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\AnswerList\\AnswerList.tsx":"18","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\NewQuestion\\NewQuestion.tsx":"19","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\NewAnswer\\NewAnswer.tsx":"20","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\ActiveTests\\ActiveTests.tsx":"21","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\TestInProgress\\TestInProgress.tsx":"22","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\LogOutPage\\LogOutPage.tsx":"23"},{"size":3318,"mtime":1617216848347,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":2037,"mtime":1607602049062,"results":"27","hashOfConfig":"25"},{"size":383,"mtime":1616613751305,"results":"28","hashOfConfig":"25"},{"size":1812,"mtime":1617268690909,"results":"29","hashOfConfig":"25"},{"size":4278,"mtime":1617218735368,"results":"30","hashOfConfig":"25"},{"size":4556,"mtime":1616708408808,"results":"31","hashOfConfig":"25"},{"size":3377,"mtime":1616771277209,"results":"32","hashOfConfig":"25"},{"size":5718,"mtime":1616786404127,"results":"33","hashOfConfig":"25"},{"size":4313,"mtime":1617217622903,"results":"34","hashOfConfig":"25"},{"size":69,"mtime":1615917239177,"results":"35","hashOfConfig":"25"},{"size":4403,"mtime":1617263240884,"results":"36","hashOfConfig":"25"},{"size":4510,"mtime":1617111435935,"results":"37","hashOfConfig":"25"},{"size":3732,"mtime":1617263449723,"results":"38","hashOfConfig":"25"},{"size":4420,"mtime":1617263970300,"results":"39","hashOfConfig":"25"},{"size":1948,"mtime":1616850293819,"results":"40","hashOfConfig":"25"},{"size":4145,"mtime":1616848009240,"results":"41","hashOfConfig":"25"},{"size":4595,"mtime":1617056628573,"results":"42","hashOfConfig":"25"},{"size":2598,"mtime":1616708839863,"results":"43","hashOfConfig":"25"},{"size":3356,"mtime":1616709053668,"results":"44","hashOfConfig":"25"},{"size":3207,"mtime":1616860150619,"results":"45","hashOfConfig":"25"},{"size":8082,"mtime":1617270088657,"results":"46","hashOfConfig":"25"},{"size":813,"mtime":1617217525887,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"iitwkd",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\index.tsx",[],["97","98"],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\reportWebVitals.ts",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\Login\\login.tsx",[],["99","100"],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\AppBanner\\banner.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\MainMenu\\MainMenu.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\Login\\Login.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\StudentRegistration\\StudentRegistration.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\NewTest\\NewTest.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\TestList\\TestList.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\api\\api.ts",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\config\\api.config.ts",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\EditTest\\EditTest.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\QuestionList\\QuestionList.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\EditQuestion\\EditQuestion.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\EditAnswer\\EditAnswer.tsx",["101","102"],"import React from 'react'\r\nimport { Alert, Button, ButtonGroup, Col, Container, Form, FormCheck } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport api, { ApiResponse } from '../../api/api';\r\nimport { AnswerApiResponseDto } from '../../ApiResponseDto/AnswerApiResponse.dto';\r\n\r\ninterface EditAnswerProperties {\r\n  match:{\r\n    params: {\r\n      tId: number\r\n      qId: number\r\n      aId: number\r\n    }\r\n  }\r\n}\r\n\r\ninterface EditAnswerState {\r\n  answerName: string\r\n  isCorrectAnswer: boolean\r\n  message: string\r\n}\r\n\r\n\r\nexport default class EditAnswer extends React.Component<EditAnswerProperties> {\r\n  \r\n  state: EditAnswerState;\r\n\r\n  constructor(props:EditAnswerProperties){\r\n    super(props)\r\n\r\n    this.state = {\r\n      answerName: \"\",\r\n      isCorrectAnswer: false,\r\n      message: \"\"\r\n    }\r\n  }\r\n  \r\n  formInputChangeHandler(event: React.ChangeEvent<HTMLInputElement>){\r\n    this.setState(Object.assign(this.state,{\r\n      [event.target.id]: event.target.value\r\n    }))\r\n    console.log(this.state)\r\n  }\r\n  checkBoxHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState(Object.assign(this.state,{\r\n      isCorrectAnswer: event.target.checked\r\n    }))\r\n    console.log(this.state)\r\n  }\r\n\r\n  \r\n  changeAnswer = () => {\r\n    let value;\r\n    this.state.isCorrectAnswer ? value = 1 : value = 0;\r\n    const data = {\r\n      isCorrectAnswer: value,\r\n      answerName: this.state.answerName\r\n    }\r\n    api(`api/question-answer/${this.props.match.params.aId}`,\"patch\",data,\"profesor\")\r\n    .then((res: ApiResponse) => {\r\n       console.log(res);\r\n      \r\n        if(res.status === \"error\") {\r\n          this.setMessage(\"Doslo je do greske\")\r\n          return;\r\n        }\r\n        \r\n        this.setMessage(\"\");\r\n\r\n    })\r\n  }\r\n\r\n  getAnswerInfo() {\r\n    api(`api/question-answer/${this.props.match.params.aId}`, \"get\", {} , \"profesor\")\r\n    .then((res:ApiResponse) => {\r\n      console.log(res);\r\n      if(res.status === \"login\") {\r\n        this.setMessage(\"login\")\r\n        return;\r\n      }\r\n      if(res.status === \"error\") {\r\n        this.setMessage(\"Doslo je do greske\")\r\n        return\r\n      }\r\n      this.putDataInState(res.data)\r\n\r\n    })\r\n  }\r\n  putDataInState(data: AnswerApiResponseDto){\r\n    let correctAnswer = 0\r\n    \r\n    this.setState({\r\n      answerName: data.answerName,\r\n      isCorrectAnswer: data.isCorrectAnswer\r\n    })\r\n    \r\n  }\r\n\r\n  setMessage(message: string) {\r\n    this.setState(Object.assign(this.state,{\r\n      message: message\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const st = \"checked\"\r\n    return (\r\n      <Container>\r\n      <p className = \"text-center lead\" >Izmena odgovora</p>\r\n      <Col md = {{span: 8, offset: 2}} className = \"p-0\">\r\n        <Form>\r\n          <Form.Group >\r\n            <Form.Label>Naziv odgovora</Form.Label>\r\n            <Form.Control\r\n              id = \"answerName\"\r\n              type=\"username\"\r\n              value = {this.state.answerName}\r\n               onChange = {event=>{this.formInputChangeHandler(event as any)}} />\r\n          </Form.Group>\r\n          \r\n         <FormCheck className = \"p-0 ml-0\">\r\n           <FormCheck.Input\r\n            style = {{width:\"20px\", height: \"20px\"}} \r\n            className = \"ml-2\"\r\n            onChange = {this.checkBoxHandler}\r\n            >\r\n            \r\n\r\n           </FormCheck.Input>\r\n           <Form.Check.Label className = \"ml-5\">Tacan Odgovor</Form.Check.Label>\r\n         </FormCheck>\r\n          \r\n          <ButtonGroup className = \"mt-4\" >\r\n            <Button \r\n              variant=\"primary\" \r\n              type=\"submit\"\r\n               onClick = {this.changeAnswer}  >\r\n              Sacuvaj\r\n            </Button>\r\n            <Button\r\n              className = \"ml-1\" \r\n              variant=\"secondary\">\r\n              <Link \r\n                className = \"LinkStyle\" \r\n                to = {`/api/profesor/test/${this.props.match.params.tId}/pitanje/${this.props.match.params.qId}/`} >Nazad</Link>\r\n            </Button>\r\n          </ButtonGroup>\r\n          {this.state.message? <Alert className = \"mt-3\" variant= \"danger\">{this.state.message}</Alert>: null}\r\n        </Form>\r\n      </Col>\r\n    </Container>\r\n    )\r\n\r\n  }\r\n  componentDidMount() {\r\n    this.getAnswerInfo()\r\n  }\r\n  componentDidUpdate(oldProps: EditAnswerProperties){\r\n    if(oldProps.match.params.aId !== this.props.match.params.aId) {\r\n      this.getAnswerInfo()\r\n    }\r\n  }\r\n  \r\n \r\n  \r\n}\r\n","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\SpecificMainMenu\\SpecificMainMenu.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\FinishedTests\\FinishedTests.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\AnswerList\\AnswerList.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\NewQuestion\\NewQuestion.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\NewAnswer\\NewAnswer.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\ActiveTests\\ActiveTests.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\TestInProgress\\TestInProgress.tsx",["103","104","105","106"],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\LogOutPage\\LogOutPage.tsx",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"107","replacedBy":"111"},{"ruleId":"109","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":90,"column":9,"nodeType":"115","messageId":"116","endLine":90,"endColumn":22},{"ruleId":"113","severity":1,"message":"117","line":106,"column":11,"nodeType":"115","messageId":"116","endLine":106,"endColumn":13},{"ruleId":"113","severity":1,"message":"118","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"119","line":7,"column":10,"nodeType":"115","messageId":"116","endLine":7,"endColumn":36},{"ruleId":"113","severity":1,"message":"120","line":11,"column":8,"nodeType":"115","messageId":"116","endLine":11,"endColumn":23},{"ruleId":"113","severity":1,"message":"121","line":125,"column":55,"nodeType":"115","messageId":"116","endLine":125,"endColumn":62},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],["122"],["123"],"@typescript-eslint/no-unused-vars","'correctAnswer' is assigned a value but never used.","Identifier","unusedVar","'st' is assigned a value but never used.","'Component' is defined but never used.","'FinishedTestApiResponseDto' is defined but never used.","'GivenAsnwerType' is defined but never used.","'variant' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]