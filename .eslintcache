[{"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\index.tsx":"1","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\reportWebVitals.ts":"2","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\Login\\login.tsx":"3","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\AppBanner\\banner.tsx":"4","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\MainMenu\\MainMenu.tsx":"5","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\Login\\Login.tsx":"6","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\StudentRegistration\\StudentRegistration.tsx":"7","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\NewTest\\NewTest.tsx":"8","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\TestList\\TestList.tsx":"9","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\api\\api.ts":"10","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\config\\api.config.ts":"11"},{"size":2057,"mtime":1615659241109,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":2037,"mtime":1607602049062,"results":"15","hashOfConfig":"13"},{"size":383,"mtime":1615138810760,"results":"16","hashOfConfig":"13"},{"size":1723,"mtime":1615138812077,"results":"17","hashOfConfig":"13"},{"size":4734,"mtime":1615730756621,"results":"18","hashOfConfig":"13"},{"size":1134,"mtime":1614973992091,"results":"19","hashOfConfig":"13"},{"size":784,"mtime":1614804155141,"results":"20","hashOfConfig":"13"},{"size":2643,"mtime":1615409465433,"results":"21","hashOfConfig":"13"},{"size":3328,"mtime":1615727937233,"results":"22","hashOfConfig":"13"},{"size":70,"mtime":1615582521149,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"iitwkd",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\index.tsx",[],["49","50"],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\reportWebVitals.ts",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\Login\\login.tsx",[],["51","52"],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\AppBanner\\banner.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\MainMenu\\MainMenu.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\Login\\Login.tsx",["53","54","55","56"],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\StudentRegistration\\StudentRegistration.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\NewTest\\NewTest.tsx",[],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\components\\TestList\\TestList.tsx",["57"],"import React from 'react';\r\nimport './TestList.css';\r\nimport { Button, ButtonGroup, Col, Container, ListGroup, Row } from 'react-bootstrap';\r\nimport TestType from '../../types/TestType';\r\nimport QuestionType from '../../types/QuestionType';\r\n\r\n\r\ninterface PageProperties {\r\n  match: {\r\n    params: {\r\n      pId: number;\r\n    }\r\n  }\r\n}\r\ninterface TestPageState {\r\n  tests?: TestType[]\r\n}\r\n\r\n\r\nexport class TestList extends React.Component<PageProperties> {\r\n\r\n  state: TestPageState\r\n\r\n  constructor(props: Readonly<PageProperties>) {\r\n    super(props)\r\n    this.state = {\r\n\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"borderLR px-0\">\r\n        {this.state.tests?.map(this.addTest)}\r\n        {console.log(\"render\")}\r\n      </Container>\r\n\r\n      \r\n    );\r\n\r\n  }\r\n\r\n  private addTest(test: TestType) {\r\n    return (\r\n      <ListGroup key={test.testId}>\r\n        <ListGroup.Item className=\"p-1 pl-2\">\r\n          <Row noGutters>\r\n            <p className=\"testName\">{test.name}</p>\r\n          </Row>\r\n          <Row noGutters>\r\n            <Col xs=\"auto\">\r\n              <p className=\"testInfo\">Broj pitanja: {test.numOfQuestions}</p>\r\n              <p className=\"testInfo\">Vreme trajanja: {test.duration} </p>\r\n            </Col>\r\n            <Col>\r\n              <ButtonGroup className=\"float-right\">\r\n                <Button href=\"#\" className=\" p-1 mr-1 mt-2\">Promeni</Button>\r\n                <Button href=\"#\" className=\" p-1 mt-2\">Pitanja</Button>\r\n              </ButtonGroup>\r\n            </Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n      </ListGroup>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPageData(); \r\n    console.log(\"mounting\",this.props.match.params.pId)\r\n    console.log(this.props.match.params.pId)\r\n\r\n  }\r\n  UNSAFE_componentWillReceiveProps(nextProp: PageProperties) {\r\n    if (nextProp.match.params.pId !== this.props.match.params.pId) {\r\n      console.log(\"willUpdate\")\r\n      this.getPageData();\r\n    } else {\r\n      \r\n      return\r\n    }\r\n  }\r\n\r\n  /* componentDidUpdate(prevProps: PageProperties, prevState: TestType[]) {\r\n    if (this.props.match.params.pId !== prevProps.match.params.pId) {\r\n      console.log(\"Props updated\")\r\n      this.getPageData()\r\n      console.log(\"stateUpdate\")\r\n    } */\r\n\r\n\r\n  private getPageData() {\r\n    const data: TestType = {\r\n      testId: 1,\r\n      name: \"Test 1\",\r\n      numOfQuestions: 60,\r\n      duration: 30\r\n    }\r\n    const data1: TestType = {\r\n      testId: 1,\r\n      name: \"Test 2\",\r\n      numOfQuestions: 100,\r\n      duration: 75\r\n    }\r\n    this.setState({\r\n      tests: [data, data1],\r\n\r\n    })\r\n  }\r\n\r\n}\r\nexport default TestList;","C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\api\\api.ts",["58"],"C:\\Users\\Marko\\Desktop\\Projekat\\front-end\\src\\config\\api.config.ts",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"59","replacedBy":"63"},{"ruleId":"61","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":4,"column":10,"nodeType":"67","messageId":"68","endLine":4,"endColumn":20},{"ruleId":"65","severity":1,"message":"69","line":68,"column":15,"nodeType":"67","messageId":"68","endLine":68,"endColumn":21},{"ruleId":"65","severity":1,"message":"70","line":110,"column":13,"nodeType":"67","messageId":"68","endLine":110,"endColumn":17},{"ruleId":"65","severity":1,"message":"69","line":111,"column":13,"nodeType":"67","messageId":"68","endLine":111,"endColumn":19},{"ruleId":"65","severity":1,"message":"71","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":20},{"ruleId":"65","severity":1,"message":"72","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":32},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],["73"],["74"],"@typescript-eslint/no-unused-vars","'ECONNRESET' is defined but never used.","Identifier","unusedVar","'userId' is assigned a value but never used.","'role' is assigned a value but never used.","'QuestionType' is defined but never used.","'getTokenSourceMapRange' is defined but never used.","no-global-assign","no-unsafe-negation"]